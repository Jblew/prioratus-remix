datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password         Password?
  notes            Note[]
  githubAccess     GithubAccess?
  githubOAuthState GithubOAuthState[]
  UserConfig       UserConfig?
  BoardProvider    BoardProvider[]
}

model UserConfig {
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String @unique
  timeZone String
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model GithubAccess {
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId               String   @unique
  refreshToken         String
  accessToken          String
  accessTokenExpiresAt DateTime
}

model GithubOAuthState {
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String @unique
  stateCode String
}

model BoardProvider {
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String @unique
  provider String
}
